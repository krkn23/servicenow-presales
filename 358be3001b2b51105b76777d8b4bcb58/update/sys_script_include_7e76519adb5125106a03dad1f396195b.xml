<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_snc_pre_sales.GetEstimationRules</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Returns an object with estimation rules.</description>
        <name>GetEstimationRules</name>
        <script><![CDATA[function GetEstimationRules()
{
	var rules = {
		tasks:
		{
			research:
			{
				role: 'tc',
				label: 'Research'
			},
			analysis:
			{
				role: 'bpc',
				label: 'Requirement Analysis / Workshop Moderation'
			},
			implementation:
			{
				role: 'tc',
				label: 'Implement'
			},
			management:
			{
				role: 'em',
				label: 'Engagement Management'
			}			
		},
		inputs:
		{
			context:
			{
				greenfield:
				{
					assumptions:
					[
						'This is a greenfield project. There is no existing product to be changed or replaced.',
						'Requirements are rather flexible and there decisions on how exactly the solution may look or be built are yet to be made.'
					],
					confidence: 1.0
				},
				improvement:
				{
					assumptions:
					[
						'This project aims at improving an existing product. Changes and extensions should hence be built on top of an existing implementation.',
						'Understanding the architecture of the existing solution is crucial and requires some additional effort.',
						'Architectural decisions already made may prevent the application to follow good practises.'
					],
					confidence: 0.75,
					effort_factor: 1.2
				},
				replacement:
				{
					assumptions:
					[
						'This project aims at replacing an existing product - that may be a solution built in ServiceNow or any other technology.',
						'Some stakeholders may expect a new solution that looks and works very similar to the existing product - which may limit implementation options.'
					],
					confidence: 0.5,
					effort_factor: 1.5
				},
				'default':
				{
					open_questions:
					[
						'Does this project aim at building something completely new, improve an existing solution or even fully replace an existing solution?'
					],
					confidence: 0
				}
			},
			quality:
			{
				research:
				{
					confidence: 1,
					effort_factor: 0.25
					/*,
					tasks:
					[
						{
							type: 'research',
							base_effort: 5,
							short_description: 'Research'
						}
					]*/
				},
				poc:
				{
					confidence: 1,
				},
				mvp:
				{
					confidence: 1,
					effort_factor: 1.1
				},
				robust:
				{
					confidence: 1,
					effort_factor: 1.5
				},
				'default':
				{
					confidence: 0
				}
			},
			quality_of_requirements:
			{
				low:
				{
					confidence: 0.0,
					tasks:
					[
						{
							type: 'analysis',
							base_effort: 15,
							short_description: 'Requirement Analysis / Workshops'
						}
					]
				},			
				medium:
				{
					confidence: 0.5,
					tasks:
					[
						{
							type: 'analysis',
							base_effort: 10,
							short_description: 'Requirement Analysis / Workshops'
						}
					]
				},			
				high:
				{
					confidence: 1.0,
					tasks:
					[
						{
							type: 'analysis',
							base_effort: 5,
							short_description: 'Analyse detailed requirements documentation'
						}
					]
				},
				'default':
				{
					confidence: 0,
					tasks:
					[
						{
							type: 'analysis',
							base_effort: 5,
							short_description: 'Requirements Exploration Workshops'
						}
					]					
				}
			},
			deployment_method:
			{
				update_sets:
				{
					confidence: 0.75,
					effort_factor: 1.2 
				},
				source_control:
				{
					confidence: 1
				},
				hybrid:
				{
					confidence: 0.5,
					effort_factor: 1.5
				},
				'default':
				{
					confidence: 0
				}
			},
			existing_data_segregation:
			{
				no:
				{
				},
				domain_separation:
				{
					confidence: 0.8,
					effort_factor: 1.2
				},
				domain_separation_process:
				{
					confidence: 0.5,
					effort_factor: 1.4,
					tasks:
					[
						{
							type: 'analysis',
							base_effort: 3,
							short_description: 'Analysis of existing process separation'						
						}
					]					
				},				
				custom:
				{
					confidence: 0.0,
					effort_factor: 1.3,
					tasks:
					[
						{
							type: 'analysis',
							base_effort: 3,
							short_description: 'Analysis of existing custom data segregation implementation'						
						}
					]
				},		
				datasilos:
				{
					confidence: 1.0,
					effort_factor: 1.1,
					tasks:
					[
						{
							type: 'analysis',
							base_effort: 1,
							short_description: 'Analysis of existing DataSilos implementation'						
						}
					]
				},					
				hybrid:
				{
					confidence: 0.0,
					effort_factor: 1.5,
					tasks:
					[
						{
							type: 'analysis',
							base_effort: 5,
							short_description: 'Analysis of existing hybrid data segregation implementation'						
						}
					]					
				},
				'default':
				{
					confidence: 0
				}
			},		
			data_segregation_required:
			{
				no:
				{
				},
				yes:
				{
					confidence: 0.5,
					effort_factor: 1.2,
					tasks:
					[
						{
							type: 'analysis',
							base_effort: 5,
							short_description: 'Analysis of data segregation requirements'						
						},
						{
							type: 'implementation',
							base_effort: 20,
							short_description: 'Implementation of data segregation requirements'						
						}
					]						
				},
			},
			business_processes_list:
			{
				task_per_line:
				{
					base_effort: 5,
					type: 'implementation',
					short_description: 'Implement Business Process "%"'
				}
			},				
			business_capabilities_list:
			{
				task_per_line:
				{
					base_effort: 5,
					type: 'implementation',
					short_description: 'Implement Business Capability "%"'
				}
			},		
			personas_list:
			{
				task_per_line:
				{
					base_effort: 3,
					type: 'implementation',
					short_description: 'Implement Access Rights and Views for Persona "%"'
				}
			},		
			internationalization:
			{
				yes: {
					effort_factor: 1.2
				},
				no: {},
				'default':
				{
					confidence: 0
				}
			},		
			languages_list:
			{
				condition:
				{
					internationalization: 'yes'
				},				
				task_per_line:
				{
					base_effort: 2,
					type: 'implementation',
					short_description: 'Manage and ingest translations for "%"'
				}
			},							
			service_catalog:
			{
				yes: {},
				no: {},
				'default':
				{
					confidence: 0
				}
			},		
			catalog_items_list:
			{
				condition:
				{
					service_catalog: 'yes'
				},				
				task_per_line:
				{
					base_effort: 2,
					type: 'implementation',
					short_description: 'Implement Catalog Item "%"'
				}
			},							
			service_portal:
			{
				yes_new: {},
				yes_existing:
				{
					confidence: 0.75
				},
				no: {},
				'default':
				{
					confidence: 0
				}
			},		
			service_portal_features_list:
			{
				condition:
				{
					service_portal: ['yes_new','yes_existing']
				},				
				task_per_line:
				{
					base_effort: 3,
					type: 'implementation',
					short_description: 'Implement Service Portal Feature "%"'
				}
			},				
			ui_builder:
			{
				yes_new:
				{
					confidence: 0.2,
					effort_factor: 1.1,
					tasks:
					[
						{
							type: 'analysis',
							base_effort: 5,
							short_description: 'Analysis whether requirements can be met using UI Builder'
						}
					]					
				},
				yes_existing:
				{
					confidence: 0.1,
					effort_factor: 1.5,
					tasks:
					[
						{
							type: 'analysis',
							base_effort: 5,
							short_description: 'Analysis of existing UI Builder Experience'
						}
					]							
				},
				no:
				{
					
				},
				'default':
				{
					confidence: 0
				}
			},		
			ui_builder_pages_list:
			{
				condition:
				{
					ui_builder: ['yes_new','yes_existing']
				},				
				task_per_line:
				{
					base_effort: 3,
					type: 'implementation',
					short_description: 'Implement Service Portal Feature "%"'
				}
			},							
			integrations_inbound:
			{
				yes: {},
				no: {},
				'default':
				{
					confidence: 0
				}
			},
			integrations_inbound_list:
			{
				condition:
				{
					integrations_inbound: 'yes'
				},
				task_per_line:
				{
					base_effort: 10,
					type: 'implementation',
					short_description: 'Implement Inbound Integration "%"'
				}
			},
			integrations_outbound:
			{
				yes: {},
				no: {},
				'default':
				{
					confidence: 0
				}
			},
			integrations_outbound_list:
			{
				condition:
				{
					integrations_outbound: 'yes'
				},			
				task_per_line:
				{
					base_effort: 5,
					type: 'implementation',
					short_description: 'Implement Outbound Integration "%"'
				}
			},			
			one_time_data_imports:
			{
				yes: {},
				no: {},
				'default':
				{
					confidence: 0
				}
			},
			one_time_data_imports_list:
			{
				condition:
				{
					one_time_data_imports: 'yes'
				},			
				task_per_line:
				{
					base_effort: 2,
					type: 'implementation',
					short_description: 'One-time Data Import "%"'
				}
			},		
			type:
			{
				servicenow_led:
				{
					confidence: 1,
					tasks:
					[
						{
							type: 'management',
							effort_factor: 0.2,
							short_description: 'Engagement Management (20%)'						
						}
					]						
				},
				partner_led:
				{
					confidence: 0.9
				},
				customer_led:
				{
					confidence: 0.8
				},
				'default':
				{
					confidence: 0
				}
			},
		},
		assumptions:
		[
			'All implementation efforts consider coordination work, regular meetings and administration tasks.',
			'All implementation efforts include the creation of automated tests - which is non-negotiable.',
			'All implementation efforts include writing technical documentation.',
			'Inbound integrations store ingested data into staging tables which is then merged with data on actual tables where this data is used. This allows for automated testing and is the foundation for a robust process.',
			'Travel time is NOT considered.',
			'Efforts do NOT consider any onboarding tasks required by the customer.',
			'The estimate does NOT contain writing copy text, knowledge base articles, end-user documentation or translations of any kind.',
			'Compliance to the customer\'s coding guideline can only be considered if automated checks are in place that can be executed by developers at any time. A coding guideline that exists as a document only can and will NOT be considered.'
		]
	};
		
	return rules;
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-03-02 21:30:21</sys_created_on>
        <sys_id>7e76519adb5125106a03dad1f396195b</sys_id>
        <sys_mod_count>48</sys_mod_count>
        <sys_name>GetEstimationRules</sys_name>
        <sys_package display_value="PreSales WORK IN PROGRESS" source="x_snc_pre_sales">358be3001b2b51105b76777d8b4bcb58</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="PreSales WORK IN PROGRESS">358be3001b2b51105b76777d8b4bcb58</sys_scope>
        <sys_update_name>sys_script_include_7e76519adb5125106a03dad1f396195b</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-04-07 15:41:02</sys_updated_on>
    </sys_script_include>
</record_update>
